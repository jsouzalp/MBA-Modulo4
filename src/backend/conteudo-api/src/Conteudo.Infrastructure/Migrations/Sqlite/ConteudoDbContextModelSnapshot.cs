// <auto-generated />
using System;
using System.Diagnostics.CodeAnalysis;
using Conteudo.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Conteudo.Infrastructure.Migrations.Sqlite
{
    [ExcludeFromCodeCoverage]
    [DbContext(typeof(ConteudoDbContext))]
    partial class ConteudoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("Conteudo.Domain.Entities.Aula", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UniqueIdentifier")
                        .HasColumnName("AulaId");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DateTime")
                        .HasColumnName("DataCriacao");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<DateTime?>("DataPublicacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("Varchar")
                        .HasColumnName("Descricao");

                    b.Property<int>("DuracaoMinutos")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsObrigatoria")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsPublicada")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("Varchar")
                        .HasColumnName("Nome");

                    b.Property<int>("Numero")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(1000)
                        .HasColumnType("Varchar")
                        .HasColumnName("Observacoes");

                    b.Property<string>("TipoAula")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("Varchar")
                        .HasColumnName("TipoAula");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("DateTime")
                        .HasColumnName("DataAlteracao");

                    b.Property<string>("VideoUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("Varchar")
                        .HasColumnName("VideoUrl");

                    b.HasKey("Id")
                        .HasName("AulasPK");

                    b.HasIndex("IsPublicada")
                        .HasDatabaseName("AlunosIsPublicadaIDX");

                    b.HasIndex("Nome")
                        .HasDatabaseName("AlunosNomeIDX");

                    b.HasIndex("TipoAula")
                        .HasDatabaseName("AlunosTipoAulaIDX");

                    b.HasIndex("CursoId", "Numero")
                        .IsUnique()
                        .HasDatabaseName("AlunosCursoIdNumeroIDX");

                    b.ToTable("Aulas", (string)null);
                });

            modelBuilder.Entity("Conteudo.Domain.Entities.Categoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UniqueIdentifier")
                        .HasColumnName("CategoriaId");

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Varchar")
                        .HasColumnName("Cor");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DateTime")
                        .HasColumnName("DataCriacao");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(0)
                        .HasColumnType("Varchar")
                        .HasColumnName("Descricao");

                    b.Property<string>("IconeUrl")
                        .HasMaxLength(500)
                        .HasColumnType("Varchar")
                        .HasColumnName("IconeUrl");

                    b.Property<bool>("IsAtiva")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Varchar")
                        .HasColumnName("Nome");

                    b.Property<int>("Ordem")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("DateTime")
                        .HasColumnName("DataAlteracao");

                    b.HasKey("Id")
                        .HasName("CategoriaPK");

                    b.HasIndex("IsAtiva")
                        .HasDatabaseName("CategoriaIsAtivaIDX");

                    b.HasIndex("Nome")
                        .IsUnique()
                        .HasDatabaseName("CategoriaNomeIDX");

                    b.HasIndex("Ordem")
                        .HasDatabaseName("CategoriaOrdemIDX");

                    b.ToTable("Categoria", (string)null);
                });

            modelBuilder.Entity("Conteudo.Domain.Entities.Curso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UniqueIdentifier")
                        .HasColumnName("CursoId");

                    b.Property<bool>("Ativo")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("CategoriaId")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DateTime")
                        .HasColumnName("DataCriacao");

                    b.Property<int>("DuracaoHoras")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImagemUrl")
                        .HasMaxLength(500)
                        .HasColumnType("Varchar")
                        .HasColumnName("ImagemUrl");

                    b.Property<string>("Instrutor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Varchar")
                        .HasColumnName("Instrutor");

                    b.Property<string>("Nivel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("Varchar")
                        .HasColumnName("Nivel");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("Varchar")
                        .HasColumnName("Nome");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("DateTime")
                        .HasColumnName("DataAlteracao");

                    b.Property<int>("VagasMaximas")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VagasOcupadas")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ValidoAte")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Valor")
                        .HasPrecision(10, 2)
                        .HasColumnType("Money")
                        .HasColumnName("Valor");

                    b.HasKey("Id")
                        .HasName("CursosPK");

                    b.HasIndex("CategoriaId")
                        .HasDatabaseName("CursoCategoriaIdIDX");

                    b.HasIndex("Nome")
                        .IsUnique()
                        .HasDatabaseName("CursoNomeIDX");

                    b.HasIndex("ValidoAte")
                        .HasDatabaseName("CursoValidoAteIDX");

                    b.ToTable("Cursos", (string)null);
                });

            modelBuilder.Entity("Conteudo.Domain.Entities.Material", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UniqueIdentifier")
                        .HasColumnName("MaterialId");

                    b.Property<Guid>("AulaId")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DateTime")
                        .HasColumnName("DataCriacao");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(0)
                        .HasColumnType("Varchar")
                        .HasColumnName("Descricao");

                    b.Property<string>("Extensao")
                        .HasMaxLength(10)
                        .HasColumnType("Varchar")
                        .HasColumnName("Extensao");

                    b.Property<bool>("IsAtivo")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsObrigatorio")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("Varchar")
                        .HasColumnName("Nome");

                    b.Property<int>("Ordem")
                        .HasColumnType("INTEGER");

                    b.Property<long>("TamanhoBytes")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TipoMaterial")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("Varchar")
                        .HasColumnName("TipoMaterial");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("DateTime")
                        .HasColumnName("DataAlteracao");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("Varchar")
                        .HasColumnName("Url");

                    b.HasKey("Id")
                        .HasName("MateriaisPK");

                    b.HasIndex("IsAtivo")
                        .HasDatabaseName("MaterialIsAtivoIDX");

                    b.HasIndex("Ordem")
                        .HasDatabaseName("MaterialOrdemIDX");

                    b.HasIndex("TipoMaterial")
                        .HasDatabaseName("MaterialTipoMaterialIDX");

                    b.HasIndex("AulaId", "Nome")
                        .IsUnique()
                        .HasDatabaseName("MaterialAulaIdNomeIDX");

                    b.ToTable("Materiais", (string)null);
                });

            modelBuilder.Entity("Conteudo.Domain.Entities.Aula", b =>
                {
                    b.HasOne("Conteudo.Domain.Entities.Curso", "Curso")
                        .WithMany("Aulas")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("Conteudo.Domain.Entities.Curso", b =>
                {
                    b.HasOne("Conteudo.Domain.Entities.Categoria", "Categoria")
                        .WithMany("Cursos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.OwnsOne("Conteudo.Domain.ValueObjects.ConteudoProgramatico", "ConteudoProgramatico", b1 =>
                        {
                            b1.Property<Guid>("CursoId")
                                .HasColumnType("UniqueIdentifier");

                            b1.Property<string>("Avaliacao")
                                .HasMaxLength(1024)
                                .HasColumnType("Varchar")
                                .HasColumnName("ConteudoProgramatico_Avaliacao");

                            b1.Property<string>("Bibliografia")
                                .HasMaxLength(1024)
                                .HasColumnType("Varchar")
                                .HasColumnName("ConteudoProgramatico_Bibliografia");

                            b1.Property<string>("Descricao")
                                .IsRequired()
                                .HasMaxLength(500)
                                .HasColumnType("Varchar")
                                .HasColumnName("ConteudoProgramatico_Descricao");

                            b1.Property<string>("Metodologia")
                                .HasMaxLength(1024)
                                .HasColumnType("Varchar")
                                .HasColumnName("ConteudoProgramatico_Metodologia");

                            b1.Property<string>("Objetivos")
                                .IsRequired()
                                .HasMaxLength(1024)
                                .HasColumnType("Varchar")
                                .HasColumnName("ConteudoProgramatico_Objetivos");

                            b1.Property<string>("PreRequisitos")
                                .HasMaxLength(1024)
                                .HasColumnType("Varchar")
                                .HasColumnName("ConteudoProgramatico_PreRequisitos");

                            b1.Property<string>("PublicoAlvo")
                                .HasMaxLength(1024)
                                .HasColumnType("Varchar")
                                .HasColumnName("ConteudoProgramatico_PublicoAlvo");

                            b1.Property<string>("Recursos")
                                .HasMaxLength(1024)
                                .HasColumnType("Varchar")
                                .HasColumnName("ConteudoProgramatico_Recursos");

                            b1.Property<string>("Resumo")
                                .IsRequired()
                                .HasMaxLength(250)
                                .HasColumnType("Varchar")
                                .HasColumnName("ConteudoProgramatico_Resumo");

                            b1.HasKey("CursoId");

                            b1.ToTable("Cursos");

                            b1.WithOwner()
                                .HasForeignKey("CursoId");
                        });

                    b.Navigation("Categoria");

                    b.Navigation("ConteudoProgramatico");
                });

            modelBuilder.Entity("Conteudo.Domain.Entities.Material", b =>
                {
                    b.HasOne("Conteudo.Domain.Entities.Aula", "Aula")
                        .WithMany("Materiais")
                        .HasForeignKey("AulaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aula");
                });

            modelBuilder.Entity("Conteudo.Domain.Entities.Aula", b =>
                {
                    b.Navigation("Materiais");
                });

            modelBuilder.Entity("Conteudo.Domain.Entities.Categoria", b =>
                {
                    b.Navigation("Cursos");
                });

            modelBuilder.Entity("Conteudo.Domain.Entities.Curso", b =>
                {
                    b.Navigation("Aulas");
                });
#pragma warning restore 612, 618
        }
    }
}
